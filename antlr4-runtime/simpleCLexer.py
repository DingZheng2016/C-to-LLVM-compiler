# Generated from simpleC.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\64")
        buf.write("\u0159\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3")
        buf.write("\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3")
        buf.write("\f\3\f\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25")
        buf.write("\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 ")
        buf.write("\3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3")
        buf.write("#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3&\3")
        buf.write("&\3&\3&\3&\3&\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\7)\u00f7\n")
        buf.write(")\f)\16)\u00fa\13)\3*\6*\u00fd\n*\r*\16*\u00fe\3+\6+\u0102")
        buf.write("\n+\r+\16+\u0103\3+\3+\6+\u0108\n+\r+\16+\u0109\3,\3,")
        buf.write("\3,\3,\3-\3-\7-\u0112\n-\f-\16-\u0115\13-\3-\3-\3.\6.")
        buf.write("\u011a\n.\r.\16.\u011b\3.\3.\5.\u0120\n.\3/\3/\3/\3/\5")
        buf.write("/\u0126\n/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60")
        buf.write("\3\60\3\60\5\60\u0133\n\60\3\61\3\61\3\61\3\61\7\61\u0139")
        buf.write("\n\61\f\61\16\61\u013c\13\61\3\61\5\61\u013f\n\61\3\61")
        buf.write("\3\61\3\61\3\61\3\62\3\62\3\62\3\62\7\62\u0149\n\62\f")
        buf.write("\62\16\62\u014c\13\62\3\62\3\62\3\62\3\62\3\62\3\63\6")
        buf.write("\63\u0154\n\63\r\63\16\63\u0155\3\63\3\63\5\u0113\u013a")
        buf.write("\u014a\2\64\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64\3\2\b\5\2")
        buf.write("C\\aac|\6\2\62;C\\aac|\3\2\62;\4\2C\\c|\6\2##,-//\61\61")
        buf.write("\5\2\13\f\17\17\"\"\2\u016a\2\3\3\2\2\2\2\5\3\2\2\2\2")
        buf.write("\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3")
        buf.write("\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2")
        buf.write("\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2")
        buf.write("\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2")
        buf.write("\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2")
        buf.write("\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3")
        buf.write("\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y")
        buf.write("\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2")
        buf.write("c\3\2\2\2\2e\3\2\2\2\3g\3\2\2\2\5p\3\2\2\2\7r\3\2\2\2")
        buf.write("\tt\3\2\2\2\13v\3\2\2\2\rx\3\2\2\2\17z\3\2\2\2\21|\3\2")
        buf.write("\2\2\23~\3\2\2\2\25\u0080\3\2\2\2\27\u0082\3\2\2\2\31")
        buf.write("\u0084\3\2\2\2\33\u0086\3\2\2\2\35\u0089\3\2\2\2\37\u008e")
        buf.write("\3\2\2\2!\u0094\3\2\2\2#\u0098\3\2\2\2%\u009f\3\2\2\2")
        buf.write("\'\u00a1\3\2\2\2)\u00a3\3\2\2\2+\u00a5\3\2\2\2-\u00a7")
        buf.write("\3\2\2\2/\u00a9\3\2\2\2\61\u00ab\3\2\2\2\63\u00ae\3\2")
        buf.write("\2\2\65\u00b1\3\2\2\2\67\u00b4\3\2\2\29\u00b7\3\2\2\2")
        buf.write(";\u00ba\3\2\2\2=\u00bd\3\2\2\2?\u00c1\3\2\2\2A\u00c8\3")
        buf.write("\2\2\2C\u00cd\3\2\2\2E\u00d4\3\2\2\2G\u00db\3\2\2\2I\u00e0")
        buf.write("\3\2\2\2K\u00e7\3\2\2\2M\u00ed\3\2\2\2O\u00ef\3\2\2\2")
        buf.write("Q\u00f4\3\2\2\2S\u00fc\3\2\2\2U\u0101\3\2\2\2W\u010b\3")
        buf.write("\2\2\2Y\u010f\3\2\2\2[\u0119\3\2\2\2]\u0125\3\2\2\2_\u0132")
        buf.write("\3\2\2\2a\u0134\3\2\2\2c\u0144\3\2\2\2e\u0153\3\2\2\2")
        buf.write("gh\7%\2\2hi\7k\2\2ij\7p\2\2jk\7e\2\2kl\7n\2\2lm\7w\2\2")
        buf.write("mn\7f\2\2no\7g\2\2o\4\3\2\2\2pq\7>\2\2q\6\3\2\2\2rs\7")
        buf.write("@\2\2s\b\3\2\2\2tu\7*\2\2u\n\3\2\2\2vw\7+\2\2w\f\3\2\2")
        buf.write("\2xy\7}\2\2y\16\3\2\2\2z{\7\177\2\2{\20\3\2\2\2|}\7.\2")
        buf.write("\2}\22\3\2\2\2~\177\7=\2\2\177\24\3\2\2\2\u0080\u0081")
        buf.write("\7?\2\2\u0081\26\3\2\2\2\u0082\u0083\7]\2\2\u0083\30\3")
        buf.write("\2\2\2\u0084\u0085\7_\2\2\u0085\32\3\2\2\2\u0086\u0087")
        buf.write("\7k\2\2\u0087\u0088\7h\2\2\u0088\34\3\2\2\2\u0089\u008a")
        buf.write("\7g\2\2\u008a\u008b\7n\2\2\u008b\u008c\7u\2\2\u008c\u008d")
        buf.write("\7g\2\2\u008d\36\3\2\2\2\u008e\u008f\7y\2\2\u008f\u0090")
        buf.write("\7j\2\2\u0090\u0091\7k\2\2\u0091\u0092\7n\2\2\u0092\u0093")
        buf.write("\7g\2\2\u0093 \3\2\2\2\u0094\u0095\7h\2\2\u0095\u0096")
        buf.write("\7q\2\2\u0096\u0097\7t\2\2\u0097\"\3\2\2\2\u0098\u0099")
        buf.write("\7t\2\2\u0099\u009a\7g\2\2\u009a\u009b\7v\2\2\u009b\u009c")
        buf.write("\7w\2\2\u009c\u009d\7t\2\2\u009d\u009e\7p\2\2\u009e$\3")
        buf.write("\2\2\2\u009f\u00a0\7#\2\2\u00a0&\3\2\2\2\u00a1\u00a2\7")
        buf.write(",\2\2\u00a2(\3\2\2\2\u00a3\u00a4\7\61\2\2\u00a4*\3\2\2")
        buf.write("\2\u00a5\u00a6\7\'\2\2\u00a6,\3\2\2\2\u00a7\u00a8\7-\2")
        buf.write("\2\u00a8.\3\2\2\2\u00a9\u00aa\7/\2\2\u00aa\60\3\2\2\2")
        buf.write("\u00ab\u00ac\7?\2\2\u00ac\u00ad\7?\2\2\u00ad\62\3\2\2")
        buf.write("\2\u00ae\u00af\7#\2\2\u00af\u00b0\7?\2\2\u00b0\64\3\2")
        buf.write("\2\2\u00b1\u00b2\7>\2\2\u00b2\u00b3\7?\2\2\u00b3\66\3")
        buf.write("\2\2\2\u00b4\u00b5\7@\2\2\u00b5\u00b6\7?\2\2\u00b68\3")
        buf.write("\2\2\2\u00b7\u00b8\7(\2\2\u00b8\u00b9\7(\2\2\u00b9:\3")
        buf.write("\2\2\2\u00ba\u00bb\7~\2\2\u00bb\u00bc\7~\2\2\u00bc<\3")
        buf.write("\2\2\2\u00bd\u00be\7k\2\2\u00be\u00bf\7p\2\2\u00bf\u00c0")
        buf.write("\7v\2\2\u00c0>\3\2\2\2\u00c1\u00c2\7f\2\2\u00c2\u00c3")
        buf.write("\7q\2\2\u00c3\u00c4\7w\2\2\u00c4\u00c5\7d\2\2\u00c5\u00c6")
        buf.write("\7n\2\2\u00c6\u00c7\7g\2\2\u00c7@\3\2\2\2\u00c8\u00c9")
        buf.write("\7e\2\2\u00c9\u00ca\7j\2\2\u00ca\u00cb\7c\2\2\u00cb\u00cc")
        buf.write("\7t\2\2\u00ccB\3\2\2\2\u00cd\u00ce\7u\2\2\u00ce\u00cf")
        buf.write("\7v\2\2\u00cf\u00d0\7t\2\2\u00d0\u00d1\7k\2\2\u00d1\u00d2")
        buf.write("\7p\2\2\u00d2\u00d3\7i\2\2\u00d3D\3\2\2\2\u00d4\u00d5")
        buf.write("\7u\2\2\u00d5\u00d6\7v\2\2\u00d6\u00d7\7t\2\2\u00d7\u00d8")
        buf.write("\7n\2\2\u00d8\u00d9\7g\2\2\u00d9\u00da\7p\2\2\u00daF\3")
        buf.write("\2\2\2\u00db\u00dc\7c\2\2\u00dc\u00dd\7v\2\2\u00dd\u00de")
        buf.write("\7q\2\2\u00de\u00df\7k\2\2\u00dfH\3\2\2\2\u00e0\u00e1")
        buf.write("\7r\2\2\u00e1\u00e2\7t\2\2\u00e2\u00e3\7k\2\2\u00e3\u00e4")
        buf.write("\7p\2\2\u00e4\u00e5\7v\2\2\u00e5\u00e6\7h\2\2\u00e6J\3")
        buf.write("\2\2\2\u00e7\u00e8\7u\2\2\u00e8\u00e9\7e\2\2\u00e9\u00ea")
        buf.write("\7c\2\2\u00ea\u00eb\7p\2\2\u00eb\u00ec\7h\2\2\u00ecL\3")
        buf.write("\2\2\2\u00ed\u00ee\7(\2\2\u00eeN\3\2\2\2\u00ef\u00f0\7")
        buf.write("i\2\2\u00f0\u00f1\7g\2\2\u00f1\u00f2\7v\2\2\u00f2\u00f3")
        buf.write("\7u\2\2\u00f3P\3\2\2\2\u00f4\u00f8\t\2\2\2\u00f5\u00f7")
        buf.write("\t\3\2\2\u00f6\u00f5\3\2\2\2\u00f7\u00fa\3\2\2\2\u00f8")
        buf.write("\u00f6\3\2\2\2\u00f8\u00f9\3\2\2\2\u00f9R\3\2\2\2\u00fa")
        buf.write("\u00f8\3\2\2\2\u00fb\u00fd\t\4\2\2\u00fc\u00fb\3\2\2\2")
        buf.write("\u00fd\u00fe\3\2\2\2\u00fe\u00fc\3\2\2\2\u00fe\u00ff\3")
        buf.write("\2\2\2\u00ffT\3\2\2\2\u0100\u0102\t\4\2\2\u0101\u0100")
        buf.write("\3\2\2\2\u0102\u0103\3\2\2\2\u0103\u0101\3\2\2\2\u0103")
        buf.write("\u0104\3\2\2\2\u0104\u0105\3\2\2\2\u0105\u0107\7\60\2")
        buf.write("\2\u0106\u0108\t\4\2\2\u0107\u0106\3\2\2\2\u0108\u0109")
        buf.write("\3\2\2\2\u0109\u0107\3\2\2\2\u0109\u010a\3\2\2\2\u010a")
        buf.write("V\3\2\2\2\u010b\u010c\7)\2\2\u010c\u010d\13\2\2\2\u010d")
        buf.write("\u010e\7)\2\2\u010eX\3\2\2\2\u010f\u0113\7$\2\2\u0110")
        buf.write("\u0112\13\2\2\2\u0111\u0110\3\2\2\2\u0112\u0115\3\2\2")
        buf.write("\2\u0113\u0114\3\2\2\2\u0113\u0111\3\2\2\2\u0114\u0116")
        buf.write("\3\2\2\2\u0115\u0113\3\2\2\2\u0116\u0117\7$\2\2\u0117")
        buf.write("Z\3\2\2\2\u0118\u011a\t\5\2\2\u0119\u0118\3\2\2\2\u011a")
        buf.write("\u011b\3\2\2\2\u011b\u0119\3\2\2\2\u011b\u011c\3\2\2\2")
        buf.write("\u011c\u011f\3\2\2\2\u011d\u011e\7\60\2\2\u011e\u0120")
        buf.write("\7j\2\2\u011f\u011d\3\2\2\2\u011f\u0120\3\2\2\2\u0120")
        buf.write("\\\3\2\2\2\u0121\u0122\7(\2\2\u0122\u0126\7(\2\2\u0123")
        buf.write("\u0124\7~\2\2\u0124\u0126\7~\2\2\u0125\u0121\3\2\2\2\u0125")
        buf.write("\u0123\3\2\2\2\u0126^\3\2\2\2\u0127\u0133\t\6\2\2\u0128")
        buf.write("\u0129\7?\2\2\u0129\u0133\7?\2\2\u012a\u012b\7#\2\2\u012b")
        buf.write("\u0133\7?\2\2\u012c\u0133\7>\2\2\u012d\u012e\7>\2\2\u012e")
        buf.write("\u0133\7?\2\2\u012f\u0133\7@\2\2\u0130\u0131\7@\2\2\u0131")
        buf.write("\u0133\7?\2\2\u0132\u0127\3\2\2\2\u0132\u0128\3\2\2\2")
        buf.write("\u0132\u012a\3\2\2\2\u0132\u012c\3\2\2\2\u0132\u012d\3")
        buf.write("\2\2\2\u0132\u012f\3\2\2\2\u0132\u0130\3\2\2\2\u0133`")
        buf.write("\3\2\2\2\u0134\u0135\7\61\2\2\u0135\u0136\7\61\2\2\u0136")
        buf.write("\u013a\3\2\2\2\u0137\u0139\13\2\2\2\u0138\u0137\3\2\2")
        buf.write("\2\u0139\u013c\3\2\2\2\u013a\u013b\3\2\2\2\u013a\u0138")
        buf.write("\3\2\2\2\u013b\u013e\3\2\2\2\u013c\u013a\3\2\2\2\u013d")
        buf.write("\u013f\7\17\2\2\u013e\u013d\3\2\2\2\u013e\u013f\3\2\2")
        buf.write("\2\u013f\u0140\3\2\2\2\u0140\u0141\7\f\2\2\u0141\u0142")
        buf.write("\3\2\2\2\u0142\u0143\b\61\2\2\u0143b\3\2\2\2\u0144\u0145")
        buf.write("\7\61\2\2\u0145\u0146\7,\2\2\u0146\u014a\3\2\2\2\u0147")
        buf.write("\u0149\13\2\2\2\u0148\u0147\3\2\2\2\u0149\u014c\3\2\2")
        buf.write("\2\u014a\u014b\3\2\2\2\u014a\u0148\3\2\2\2\u014b\u014d")
        buf.write("\3\2\2\2\u014c\u014a\3\2\2\2\u014d\u014e\7,\2\2\u014e")
        buf.write("\u014f\7\61\2\2\u014f\u0150\3\2\2\2\u0150\u0151\b\62\2")
        buf.write("\2\u0151d\3\2\2\2\u0152\u0154\t\7\2\2\u0153\u0152\3\2")
        buf.write("\2\2\u0154\u0155\3\2\2\2\u0155\u0153\3\2\2\2\u0155\u0156")
        buf.write("\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0158\b\63\2\2\u0158")
        buf.write("f\3\2\2\2\20\2\u00f8\u00fe\u0103\u0109\u0113\u011b\u011f")
        buf.write("\u0125\u0132\u013a\u013e\u014a\u0155\3\b\2\2")
        return buf.getvalue()


class simpleCLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    ID = 40
    INT = 41
    DOUBLE = 42
    CHAR = 43
    STRING = 44
    LIB = 45
    Conjunction = 46
    Operator = 47
    LineComment = 48
    BlockComment = 49
    WS = 50

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#include'", "'<'", "'>'", "'('", "')'", "'{'", "'}'", "','", 
            "';'", "'='", "'['", "']'", "'if'", "'else'", "'while'", "'for'", 
            "'return'", "'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'=='", 
            "'!='", "'<='", "'>='", "'&&'", "'||'", "'int'", "'double'", 
            "'char'", "'string'", "'strlen'", "'atoi'", "'printf'", "'scanf'", 
            "'&'", "'gets'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "DOUBLE", "CHAR", "STRING", "LIB", "Conjunction", 
            "Operator", "LineComment", "BlockComment", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "ID", "INT", "DOUBLE", "CHAR", "STRING", "LIB", 
                  "Conjunction", "Operator", "LineComment", "BlockComment", 
                  "WS" ]

    grammarFileName = "simpleC.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


